Ember.TEMPLATES.application=Ember.Handlebars.template(function(e,s,t,a,n){function h(e,s){s.buffer.push("Node Webkit Tomster Seed")}function o(e,s){var a,n,h,o;n={},h={},o={hash:{},contexts:[e,e],types:["STRING","STRING"],hashContexts:h,hashTypes:n,data:s},s.buffer.push(d((a=t["link-to"]||e&&e["link-to"],a?a.call(e,"Todo List","todo",o):b.call(e,"link-to","Todo List","todo",o))))}function l(e,s){var a,n,h,o;n={},h={},o={hash:{},contexts:[e,e],types:["STRING","STRING"],hashContexts:h,hashTypes:n,data:s},s.buffer.push(d((a=t["link-to"]||e&&e["link-to"],a?a.call(e,"View 1","view1",o):b.call(e,"link-to","View 1","view1",o))))}this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),n=n||{};var r,i,p,u,c,f="",b=t.helperMissing,d=this.escapeExpression,m=this;return n.buffer.push('<nav class="top-bar">\n  <ul class="title-area">\n    <li class="name">\n      <h1>'),p={},u={},c={hash:{},inverse:m.noop,fn:m.program(1,h,n),contexts:[s],types:["STRING"],hashContexts:u,hashTypes:p,data:n},r=t["link-to"]||s&&s["link-to"],i=r?r.call(s,"index",c):b.call(s,"link-to","index",c),(i||0===i)&&n.buffer.push(i),n.buffer.push('</h1>\n    </li>\n  </ul>\n  <section class="top-bar-section">\n    <ul class="left">\n      \n      '),u={tagName:s},p={tagName:"STRING"},c={hash:{tagName:"li"},inverse:m.noop,fn:m.program(3,o,n),contexts:[s],types:["STRING"],hashContexts:u,hashTypes:p,data:n},r=t["link-to"]||s&&s["link-to"],i=r?r.call(s,"todo",c):b.call(s,"link-to","todo",c),(i||0===i)&&n.buffer.push(i),n.buffer.push("\n      "),u={tagName:s},p={tagName:"STRING"},c={hash:{tagName:"li"},inverse:m.noop,fn:m.program(5,l,n),contexts:[s],types:["STRING"],hashContexts:u,hashTypes:p,data:n},r=t["link-to"]||s&&s["link-to"],i=r?r.call(s,"view1",c):b.call(s,"link-to","view1",c),(i||0===i)&&n.buffer.push(i),n.buffer.push('\n    </ul>\n  </section>\n</nav>\n<div class="row">\n  <div class="small-12 large-12 columns">\n    '),p={},u={},n.buffer.push(d(t._triageMustache.call(s,"outlet",{hash:{},contexts:[s],types:["ID"],hashContexts:u,hashTypes:p,data:n}))),n.buffer.push("\n    "),p={},u={},n.buffer.push(d(t._triageMustache.call(s,"sem-ver",{hash:{},contexts:[s],types:["ID"],hashContexts:u,hashTypes:p,data:n}))),n.buffer.push("\n  </div>\n</div>\n\n"),f}),Ember.TEMPLATES["components/sem-ver"]=Ember.Handlebars.template(function(e,s,t,a,n){this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),n=n||{};var h,o,l="",r=this.escapeExpression;return n.buffer.push("<ul>\n  <li>Current version: <code>"),h={},o={},n.buffer.push(r(t._triageMustache.call(s,"version",{hash:{},contexts:[s],types:["ID"],hashContexts:o,hashTypes:h,data:n}))),n.buffer.push("</code></li>\n  <li>Next Patch version: <code>"),h={},o={},n.buffer.push(r(t._triageMustache.call(s,"nextPatchVersion",{hash:{},contexts:[s],types:["ID"],hashContexts:o,hashTypes:h,data:n}))),n.buffer.push("</code></li>\n  <li>Next Minor version: <code>"),h={},o={},n.buffer.push(r(t._triageMustache.call(s,"nextMinorVersion",{hash:{},contexts:[s],types:["ID"],hashContexts:o,hashTypes:h,data:n}))),n.buffer.push("</code></li>\n  <li>Next Major version: <code>"),h={},o={},n.buffer.push(r(t._triageMustache.call(s,"nextMajorVersion",{hash:{},contexts:[s],types:["ID"],hashContexts:o,hashTypes:h,data:n}))),n.buffer.push("</code></li>\n</ul>\n\n"),l}),Ember.TEMPLATES.todo=Ember.Handlebars.template(function(e,s,t,a,n){function h(e,s){var a,n,h,o,l="";return s.buffer.push('\n    <li class="todo-item">\n      <label>\n        '),n={type:e,checked:e},h={type:"STRING",checked:"ID"},o={hash:{type:"checkbox",checked:"done"},contexts:[],types:[],hashContexts:n,hashTypes:h,data:s},s.buffer.push(c((a=t.input||e&&e.input,a?a.call(e,o):u.call(e,"input",o)))),s.buffer.push("\n        <span "),n={"class":e},h={"class":"STRING"},o={hash:{"class":"done:is-done:not-done"},contexts:[],types:[],hashContexts:n,hashTypes:h,data:s},s.buffer.push(c((a=t["bind-attr"]||e&&e["bind-attr"],a?a.call(e,o):u.call(e,"bind-attr",o)))),s.buffer.push(">"),h={},n={},s.buffer.push(c(t._triageMustache.call(e,"title",{hash:{},contexts:[e],types:["ID"],hashContexts:n,hashTypes:h,data:s}))),s.buffer.push("</span>\n      </label>\n    </li>\n  "),l}this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),n=n||{};var o,l,r,i,p="",u=t.helperMissing,c=this.escapeExpression,f=this;return n.buffer.push('<h2>Todos</h2>\n<div class="todo-summary">\n  <span class="todo-count">'),l={},r={},n.buffer.push(c(t._triageMustache.call(s,"remaining",{hash:{},contexts:[s],types:["ID"],hashContexts:r,hashTypes:l,data:n}))),n.buffer.push(" of "),l={},r={},n.buffer.push(c(t._triageMustache.call(s,"length",{hash:{},contexts:[s],types:["ID"],hashContexts:r,hashTypes:l,data:n}))),n.buffer.push(' remaining</span>\n  <button class="archive tiny radius alert button" '),l={},r={},n.buffer.push(c(t.action.call(s,"archive",{hash:{},contexts:[s],types:["STRING"],hashContexts:r,hashTypes:l,data:n}))),n.buffer.push('>Archive Done Items</button>\n</div>\n<ul class="todo-list">\n  '),l={},r={},o=t.each.call(s,"model",{hash:{},inverse:f.noop,fn:f.program(1,h,n),contexts:[s],types:["ID"],hashContexts:r,hashTypes:l,data:n}),(o||0===o)&&n.buffer.push(o),n.buffer.push('\n  <li class="create-todo">\n    <label>\n      '),r={value:s,type:s,"class":s},l={value:"ID",type:"STRING","class":"STRING"},i={hash:{value:"newTodo",type:"text","class":"new-todo"},contexts:[],types:[],hashContexts:r,hashTypes:l,data:n},n.buffer.push(c((o=t.input||s&&s.input,o?o.call(s,i):u.call(s,"input",i)))),n.buffer.push('\n      <button class="create small radius button" '),l={},r={},n.buffer.push(c(t.action.call(s,"create",{hash:{},contexts:[s],types:["STRING"],hashContexts:r,hashTypes:l,data:n}))),n.buffer.push(">Create</button>\n    </label>\n  </li>\n</ul>\n\n"),p}),Ember.TEMPLATES.view1=Ember.Handlebars.template(function(e,s,t,a,n){this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),n=n||{},n.buffer.push("<p>This is the template for view 1.</p>\n\n")}),Ember.TEMPLATES.view2=Ember.Handlebars.template(function(e,s,t,a,n){this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),n=n||{},n.buffer.push("<p>This is the template for view 2.</p>\n\n")});